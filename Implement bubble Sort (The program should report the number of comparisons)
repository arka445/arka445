#include <iostream>
#include <vector>

using namespace std;

// Function to perform Bubble Sort and count comparisons
void bubbleSort(vector<int>& arr, int& comparisonCount) {
    int n = arr.size();
    bool swapped;

    // Traverse through all elements in the array
    for (int i = 0; i < n - 1; ++i) {
        swapped = false;

        // Last i elements are already sorted, so the inner loop can avoid the last i elements
        for (int j = 0; j < n - i - 1; ++j) {
            comparisonCount++; // Increment the comparison count

            if (arr[j] > arr[j + 1]) {
                // Swap the elements if they are in the wrong order
                swap(arr[j], arr[j + 1]);
                swapped = true;
            }
        }

        // If no two elements were swapped in the inner loop, then the array is already sorted
        if (!swapped) {
            break;
        }
    }
}

int main() {
    vector<int> arr;
    int n, comparisonCount = 0;

    cout << "Enter the number of elements in the array: ";
    cin >> n;

    arr.resize(n);
    cout << "Enter the elements of the array:\n";
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
    }

    bubbleSort(arr, comparisonCount);

    cout << "Sorted array: ";
    for (int i = 0; i < n; ++i) {
        cout << arr[i] << " ";
    }
    cout << endl;

    cout << "Number of comparisons: " << comparisonCount << endl;

    return 0;
}
